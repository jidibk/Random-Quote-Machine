{/* {
          btnId.flat().map((btn, i) => {
            return (
              <Button
                key={i}
                
                id={btn}
                onClick={() => {
                  console.log(`${btn} clicked!`);
                }}
              />
            );
          })
        } */}
          {/* <div id='numbers'>
            <input id='zero' className='button' type="button" value="0" onClick={e => setValue( value + e.target.value)}/>
            <input id='one' className='button' type="button" value="1" onClick={e => setValue( value + e.target.value)}/>
            <input id='two' className='button' type="button" value="2" onClick={e => setValue( value + e.target.value)}/>
            <input id='three' className='button' type="button" value="3" onClick={e => setValue( value + e.target.value)}/>
            <input id='four' className='button' type="button" value="4" onClick={e => setValue( value + e.target.value)}/>
            <input id='five' className='button' type="button" value="5" onClick={e => setValue( value + e.target.value)}/>
            <input id='six' className='button' type="button" value="6" onClick={e => setValue( value + e.target.value)}/>
            <input id='seven' className='button' type="button" value="7" onClick={e => setValue( value + e.target.value)}/>
            <input id='eight' className='button' type="button" value="8" onClick={e => setValue( value + e.target.value)}/>
            <input id='nine' className='button' type="button" value="9" onClick={e => setValue( value + e.target.value)}/>
          </div>
          <div>
            <input id='equals' className='button' type="button" value="=" onClick={result}/>
            <input id='add' className='button' type="button" value="+" onClick={e => setValue( value + e.target.value)}/>
            <input id='subtract' className='button' type="button" value="-" onClick={e => setValue( value + e.target.value)}/>
            <input id='multiply' className='button' type="button" value="*" onClick={e => setValue( value + e.target.value)}/>
            <input id='divide' className='button' type="button" value="/" onClick={e => setValue( value + e.target.value)}/>
            <input id='decimal' className='button' type="button" value="." onClick={e => setValue( value + e.target.value)}/>
                
          </div>
          <div>
            <input id='clear' className='button' type="button" value="AC" onClick={e => setValue('')}/>
            <input id='zero' className='button' type="button" value="DE" onClick={e => setValue( value.slice(0, -1))}/>
              
          </div> */}





















          import './calculator.css'
import React, { useState } from 'react'


const btnValues = [
  ["C", "+-", "%", "/"],
  [7, 8, 9, "X"],
  [4, 5, 6, "-"],
  [1, 2, 3, "+"],
  [0, ".", "="],
];

// const btnId  = [
//   ['clear', 'delete', 'percent', 'divide'],
//   ['seven', 'eight', 'nine', 'multipy'],
//   ['four', 'five', 'six', 'subtract'],
//   ['one', 'two', 'three', 'add']
//   ['zero', 'decimal', 'equals']
// ];

function Calculator() {
  let [calc, setCalc] = useState({
    sign: "",
    num: 0,
    res: 0,
  });

  const numClickHandler = (e) => {
    e.preventDefault();
    const value = e.target.innerHTML;

      setCalc({
        ...calc,
        num:
          calc.num === 0 && value === "0"
            ? "0"
            : toLocaleString(calc.num + value),
        res: !calc.sign ? 0 : calc.res,
      });
    }
  };

  const commaClickHandler = (e) => {
    e.preventDefault();
    const value = e.target.innerHTML;

    setCalc({
      ...calc,
      num: !calc.num.toString().includes(".") ? calc.num + value : calc.num,
    });
  };

  const signClickHandler = (e) => {
    e.preventDefault();
    const value = e.target.innerHTML;

    setCalc({
      ...calc,
      sign: value,
      res: !calc.res && calc.num ? calc.num : calc.res,
      num: 0,
    });
  };

  const equalsClickHandler = () => {
    if (calc.sign && calc.num) {
      const math = (a, b, sign) =>
        sign === "+"
          ? a + b
          : sign === "-"
          ? a - b
          : sign === "X"
          ? a * b
          : a / b;

      setCalc({
        ...calc,
        res:
          calc.num === "0" && calc.sign === "/"
            ? "Can't divide with 0"
            : toLocaleString(
                math(
                  calc.sign
                )
              ),
        sign: "",
        num: 0,
      });
    }
  };

  const invertClickHandler = () => {
    setCalc({
      ...calc,
      sign: "",
    });
  };

  const percentClickHandler = () => {

    setCalc({
      ...calc,
      num: (num /= Math.pow(100, 1)),
      res: (res /= Math.pow(100, 1)),
      sign: "",
    });
  };

  const resetClickHandler = () => {
    setCalc({
      ...calc,
      sign: "",
      num: 0,
      res: 0,
    });
  };
  return (
    <div className='wrapper'>
        <div >
          <Display value={calc.num ? calc.num : calc.res} />
          {/* <input id="display" type="text" value={calc.res}/> 
           */}
        </div>
        <div className="buttonbox">
        {
          btnValues.flat().map((btn, i) => {
            return (
              <Button
                key={i}
                className={btn === "=" ? "equals" : ""}
                value={btn}
                onClick={
                btn === "C"
                  ? resetClickHandler
                  // : btn === "+-"
                  // ? invertClickHandler
                  : btn === "%"
                  ? percentClickHandler
                  : btn === "="
                  ? equalsClickHandler
                  : btn === "/" || btn === "X" || btn === "-" || btn === "+"
                  ? signClickHandler
                  : btn === "."
                  ? commaClickHandler
                  : numClickHandler
              }
              />
            );
          })
        }
        
        </div>
    </div>
  )
};

export default Calculator

const Button = ({ id, className, value, onClick }) => {
  return (
    <button id={id} className={className} onClick={onClick}>
      {value}
    </button>
  );
};

const Display = ({value}) => {
  return (
    <div id="display">
    {/* <input id="display" type="text" value={value}/>     */}
    {value}
    </div>
  ); 
};